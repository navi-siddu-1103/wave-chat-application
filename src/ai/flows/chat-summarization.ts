// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview A chat summarization AI agent.
 *
 * - summarizeChat - A function that handles the chat summarization process.
 * - SummarizeChatInput - The input type for the summarizeChat function.
 * - SummarizeChatOutput - The return type for the summarizeChat function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SummarizeChatInputSchema = z.object({
  chatHistory: z
    .string()
    .describe(
      'The complete chat history to be summarized. Include all messages and participants.'
    ),
});
export type SummarizeChatInput = z.infer<typeof SummarizeChatInputSchema>;

const SummarizeChatOutputSchema = z.object({
  summary: z
    .string()
    .describe(
      'A concise summary of the chat history, including key topics, decisions made, and important links shared.'
    ),
});
export type SummarizeChatOutput = z.infer<typeof SummarizeChatOutputSchema>;

export async function summarizeChat(input: SummarizeChatInput): Promise<SummarizeChatOutput> {
  return summarizeChatFlow(input);
}

const prompt = ai.definePrompt({
  name: 'summarizeChatPrompt',
  input: {schema: SummarizeChatInputSchema},
  output: {schema: SummarizeChatOutputSchema},
  prompt: `You are an AI assistant tasked with summarizing chat histories for new users.

  Provide a concise summary of the following chat history, including key topics discussed, any decisions made, and important links shared. The summary should be easily understandable for someone who is joining the conversation for the first time.

  Chat History:
  {{chatHistory}}`,
});

const summarizeChatFlow = ai.defineFlow(
  {
    name: 'summarizeChatFlow',
    inputSchema: SummarizeChatInputSchema,
    outputSchema: SummarizeChatOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
